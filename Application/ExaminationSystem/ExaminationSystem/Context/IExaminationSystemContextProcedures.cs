// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ExaminationSystem.Model;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace ExaminationSystem.Context
{
    public partial interface IExaminationSystemContextProcedures
    {
        Task<List<CHOICEInsertResult>> CHOICEInsertAsync(string COL2DATA, bool? COL3DATA, int? COL4DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<COURSEINSERTResult>> COURSEINSERTAsync(int? COL1DATA, string COL2DATA, int? COL3DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DEPTINSERTResult>> DEPTINSERTAsync(string COL2DATA, int? COL3DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ExamAnswersAsync(int? Exam_ID, int? Student_ID, int? QID1, int? Ans1, int? QID2, int? Ans2, int? QID3, int? Ans3, int? QID4, int? Ans4, int? QID5, int? Ans5, int? QID6, int? Ans6, int? QID7, int? Ans7, int? QID8, int? Ans8, int? QID9, int? Ans9, int? QID10, int? Ans10, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ExamCorrectionResult>> ExamCorrectionAsync(int? ExId, int? StId, int? CID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ExamGenerationResult>> ExamGenerationAsync(int? CID, int? numOfTF, int? numOfMCQ, string examComplexity, int? InstID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetChoicesByQuestionIdResult>> GetChoicesByQuestionIdAsync(int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetExamQuestionsAsync(int? Exam_ID, OutputParameter<int?> QID1, OutputParameter<int?> QID2, OutputParameter<int?> QID3, OutputParameter<int?> QID4, OutputParameter<int?> QID5, OutputParameter<int?> QID6, OutputParameter<int?> QID7, OutputParameter<int?> QID8, OutputParameter<int?> QID9, OutputParameter<int?> QID10, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamQuestionsByIdResult>> GetExamQuestionsByIdAsync(int? ExamID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamQuestionsTextByIdResult>> GetExamQuestionsTextByIdAsync(int? ExamID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamReportResult>> GetExamReportAsync(int? ExamID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExamReportWithModelAnswerResult>> GetExamReportWithModelAnswerAsync(int? ExamNumber, int? StudentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetInstructorCoursesAndStudentsResult>> GetInstructorCoursesAndStudentsAsync(int? InstructorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentCoursesResult>> GetStudentCoursesAsync(int? StudentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentGradesResult>> GetStudentGradesAsync(int? StudentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetStudentsByDepartmentResult>> GetStudentsByDepartmentAsync(int? Department_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTopicsByCourseResult>> GetTopicsByCourseAsync(int? Course_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<INSINSERTResult>> INSINSERTAsync(string COL2DATA, string COL3DATA, DateOnly? COL4DATA, string COL5DATA, string COL6DATA, int? COL7DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<QUESTIONInsertResult>> QUESTIONInsertAsync(string COL2DATA, string COL3DATA, string COL4DATA, int? COL5DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLAnswerResult>> SelectALLAnswerAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLChoiceResult>> SelectALLChoiceAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLCourseResult>> SelectALLCourseAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLDepartmentResult>> SelectALLDepartmentAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLExamResult>> SelectALLExamAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLExamQuestionResult>> SelectALLExamQuestionAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLGradesResult>> SelectALLGradesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLInstructorResult>> SelectALLInstructorAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLQuestionResult>> SelectALLQuestionAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLStudentResult>> SelectALLStudentAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLStudentExamResult>> SelectALLStudentExamAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLTeachResult>> SelectALLTeachAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SelectALLTopicResult>> SelectALLTopicAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectAnswerAsync(int? ExamID, int? StudentID, int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectChoiceAsync(int? ChoiceID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectCourseAsync(int? CourseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectDepartmentAsync(int? DepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectExamAsync(int? ExamID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectExamQuestionAsync(int? ExamID, int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectGradesAsync(int? StudentID, int? CourseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectInstructorAsync(int? InstructorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectQuestionAsync(int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectStudentAsync(int? StudentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectStudentExamAsync(int? ExamID, int? StudentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectTeachAsync(int? CourseID, int? InstructorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SelectTopicAsync(int? TopicID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<STUDINSERTResult>> STUDINSERTAsync(int? COL1DATA, string COL2DATA, string COL3DATA, string COL4DATA, string COL5DATA, string COL6DATA, int? COL7DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TOPICInsertResult>> TOPICInsertAsync(int? COL1DATA, string COL2DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATECHOICEResult>> UPDATECHOICEAsync(int? ChoiceID, string ChoiceText, bool? IsCorrect, int? QuestionID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATECOURSEResult>> UPDATECOURSEAsync(int? CourseID, string CourseName, int? TopicID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATEDEPARTMENTResult>> UPDATEDEPARTMENTAsync(int? COL1DATA, string COL2DATA, int? COL3DATA, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATEGRADEResult>> UPDATEGRADEAsync(int? StudentID, int? ExamID, int? Score, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATEINSTRUCTORResult>> UPDATEINSTRUCTORAsync(int? InstructorID, string FirstName, string LastName, DateOnly? HireDate, string PhoneNumber, string Email, int? DepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATEQUESTIONResult>> UPDATEQUESTIONAsync(int? QuestionID, string QuestionText, string QuestionType, string Complexity, int? CourseID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATESTUDENTResult>> UPDATESTUDENTAsync(int? StudentId, string FirstName, string LastName, string Address, string Email, string PhoneNum, int? DepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UPDATETOPICResult>> UPDATETOPICAsync(int? TopicID, string TopicTitle, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
